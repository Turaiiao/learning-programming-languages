var mut arr = []

for ((i, v) <- 0..20) ->
  arr[i] = v

// iterator arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
println 'iterator arr = \(arr)'

var mut a = 0
var mut b = 0

for (i <- arr) -> if (i % 2 == 0) ->
  a += 1
else ->
  b += 1
  
println '\(a) even numbers and \(b) radix numbers'

// This function parameter use borrowed value the original value will retain after function destroyed.
def max (bor arr: list<int>) -> int ~>
  var mut max = arr[0]
  
  for (i <- arr) ->
    if (i > max) ->
      max = i
      
  return max
end

println 'The max number of list is: \(max(arr))'
