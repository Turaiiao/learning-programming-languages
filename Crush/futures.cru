

var a = 23

var a = 56

// 56
println(a)

// 56
def test (bor x: int) => println(x)

// 56
println(x)

// 56
def test (x: int) => println(x)

// nil
println(x)

// 参数引用或者借用，默认为引用，没有可变和不可变区别
// 如果不加借用 `bor` 关键字则值会在作用域结束时销毁

// 使用了一个生命周期参数，并为两个参数规定了生命周期，两个参数都是引用的。
// 函数返回其中某个字符串，表示两个参数的作用域必须比函数调用时长或相等，并且返回的字符串也必须是生命周期里的。
open def lifeTimeFunction <'a> (x + a: string, y + a: string) -> + a string ~>
  if x.len() > y.len() ->
    return x
  else ->
    return y
end

open var lifeTimeFunction <'a> (x + a: string, y + a: string) -> + a string => if x.len() > y.len() -> x else -> y

